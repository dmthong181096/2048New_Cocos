{"version":3,"sources":["score.js"],"names":["V","require","Emitter","cc","Class","extends","Component","properties","scoreNumber","Label","scoreExtra","score","onLoad","start","instance","emit","node","active","updateExtraScore","number","duration","string","actions","moveTo","callFunc","stopAllActions","runAction","sequence","updateScore"],"mappings":";;;;;;AAAA,IAAMA,IAAIC,QAAQ,WAAR,CAAV;AACA,IAAMC,UAAUD,QAAQ,UAAR,CAAhB;AACAE,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,qBAAaL,GAAGM,KADR;AAERC,oBAAYP,GAAGM,KAFP;AAGRE,eAAM;AAHE,KAHP;;AASL;;AAEAC,UAXK,oBAWK,CAET,CAbI;AAeLC,SAfK,mBAeI;AACLX,gBAAQY,QAAR,CAAiBC,IAAjB,CAAsB,YAAtB,EAAoC,IAApC;AACA,aAAKL,UAAL,CAAgBM,IAAhB,CAAqBC,MAArB,GAA8B,KAA9B;AACH,KAlBI;AAmBLC,oBAnBK,4BAmBYC,MAnBZ,EAmBoB;AAAA;;AAErB,YAAIC,WAAW,GAAf;AACA,YAAID,UAAU,CAAd,EAAiB;AACb;AACH;AACD,aAAKT,UAAL,CAAgBM,IAAhB,CAAqBC,MAArB,GAA8B,IAA9B;AACA,aAAKP,UAAL,CAAgBW,MAAhB,GAAyB,OAAOF,MAAhC;AACA,YAAIG,UAAU,CAACnB,GAAGoB,MAAH,CAAU,CAAV,EAAY,CAAZ,EAAc,CAAd,CAAD,EACEpB,GAAGoB,MAAH,CAAUH,QAAV,EAAmB,CAAnB,EAAqB,EAArB,CADF,EAEEjB,GAAGoB,MAAH,CAAU,CAAV,EAAY,CAAZ,EAAc,CAAC,EAAf,CAFF,EAGEpB,GAAGqB,QAAH,CAAa,YAAK;AAAC,kBAAKd,UAAL,CAAgBM,IAAhB,CAAqBC,MAArB,GAA8B,KAA9B;AAAoC,SAAvD,CAHF,EAIE,KAAKP,UAAL,CAAgBM,IAAhB,CAAqBS,cAArB,EAJF,CAAd;AAMA,aAAKf,UAAL,CAAgBM,IAAhB,CAAqBU,SAArB,CAA+BvB,GAAGwB,QAAH,CAAYL,OAAZ,CAA/B;AACH,KAlCI;AAmCLM,eAnCK,uBAmCOT,MAnCP,EAmCe;AAChB,aAAKX,WAAL,CAAiBa,MAAjB,GAA0BF,MAA1B;AACH;AACD;;AAtCK,CAAT","file":"score.js","sourceRoot":"../../../../assets/Script","sourcesContent":["const V = require(\"Variables\");\nconst Emitter = require('mEmitter');\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        scoreNumber: cc.Label,\n        scoreExtra: cc.Label,\n        score:0\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n\n    },\n\n    start () {\n        Emitter.instance.emit('transScore', this);  \n        this.scoreExtra.node.active = false\n    },\n    updateExtraScore(number) {\n        \n        let duration = 0.5\n        if (number == 0) {\n            return\n        }\n        this.scoreExtra.node.active = true\n        this.scoreExtra.string = \"+ \" + number\n        let actions = [cc.moveTo(0,0,0),\n                        cc.moveTo(duration,0,20),\n                        cc.moveTo(0,0,-20),\n                        cc.callFunc( ()=> {this.scoreExtra.node.active = false}),\n                        this.scoreExtra.node.stopAllActions(),\n                    ]\n        this.scoreExtra.node.runAction(cc.sequence(actions))\n    },\n    updateScore(number) {\n        this.scoreNumber.string = number\n    }\n    // update (dt) {},\n});\n"]}