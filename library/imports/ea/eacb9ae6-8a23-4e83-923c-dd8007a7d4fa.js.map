{"version":3,"sources":["../../../../assets/Script/assets/Script/board.js"],"names":["ROWS","NUMBERS","V","require","Emitter","cc","Class","extends","Component","properties","blockPrefab","default","type","Prefab","onLoad","instance","emit","registerEvent","transAudioSceneWelcomeToMain","data","start","createBlocksLayout","gameInit","countScore","scoreExtra","scoreGame","userData","Object","score","moveStep","bestScore","loadBestScore","saveBestScore","updateExtraScore","updateScore","createdBlock","width","height","x","y","label","block","instantiate","parent","node","setPosition","v2","getComponent","setLabel","appear","distance","size","row","positions","push","col","cols","getEmptyLocations","emptyLocations","blocks","createArray2D","value","arr","Array","i","j","isCompleted","randomBlock","length","locationRandom","Math","floor","random","numberRandom","numbers","checkLose","afterMove","isMoved","actions","callFunc","checkWin","runAction","sequence","moveNode","position","callback","moveTo","mergeNode","blockTarget","destroy","merge","moveLeft","moveRight","rows","inputRight","getNodeToMove","counter","checkCounter","inputLeft","moveUp","inputUp","moveDown","inputDown","newGame","audio1","playSoundClick"],"mappings":"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","file":"board.js","sourceRoot":"../../../../assets/Script","sourcesContent":["const ROWS = 4;\r\nconst NUMBERS = [2, 4];\r\nconst V = require(\"Variables\");\r\nconst Emitter = require('mEmitter');\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        blockPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        Emitter.instance.emit('transBlocksLayout', this);\r\n        Emitter.instance.registerEvent(\"transAudioSceneWelcomeToMain\", this.transAudioSceneWelcomeToMain, this);\r\n    },\r\n    transAudioSceneWelcomeToMain(data) {\r\n    },\r\n\r\n    start() {\r\n        this.createBlocksLayout()\r\n        this.gameInit();\r\n    },\r\n    countScore() {\r\n        if (V.scoreExtra == 0) {\r\n            return\r\n        }\r\n        V.scoreGame += V.scoreExtra\r\n        let userData = new Object()\r\n        userData.score = V.scoreGame\r\n        userData.moveStep = 10\r\n        let bestScore = V.bestScore.loadBestScore()\r\n        if (userData.score > bestScore.score) {\r\n            V.bestScore.saveBestScore(userData)\r\n            V.bestScore.loadBestScore()\r\n        }\r\n        V.score.updateExtraScore(V.scoreExtra)\r\n        V.score.updateScore(V.scoreGame)\r\n        V.scoreExtra = 0\r\n    },\r\n    createdBlock(width, height, x, y, label) {\r\n        let block = cc.instantiate(this.blockPrefab);\r\n        block.width = width;\r\n        block.height = height;\r\n        block.parent = this.node\r\n        block.setPosition(cc.v2(x, y));\r\n        block.getComponent('block').setLabel(label)\r\n        block.getComponent('block').appear()\r\n        return block;\r\n    },\r\n    createBlocksLayout() {\r\n        let y = 250;\r\n        let distance = 20\r\n        let size = 150\r\n        for (let row = 0; row < 4; row++) {\r\n            V.positions.push([0, 0, 0, 0]);\r\n            let x = -250\r\n            for (let col = 0; col < V.cols; col++) {\r\n                this.createdBlock(size, size, x, y, 0)\r\n                V.positions[row][col] = cc.v2(x, y);\r\n                x += distance + size;\r\n            }\r\n            y -= distance + size\r\n        }\r\n    },\r\n\r\n    getEmptyLocations() {\r\n        let emptyLocations = [];\r\n        for (let row = 0; row < 4; row++) {\r\n            for (let col = 0; col < 4; col++) {\r\n                if (V.blocks[row][col] == null) {\r\n                    emptyLocations.push({\r\n                        x: row,\r\n                        y: col\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return emptyLocations;\r\n    },\r\n    createArray2D(row, col, value) {\r\n        let arr = new Array()\r\n        for (let i = 0; i < row; i++) {\r\n            arr[i] = new Array()\r\n            for (let j = 0; j < col; j++) {\r\n                arr[i][j] = value\r\n            }\r\n        }\r\n        return arr\r\n    },\r\n    gameInit() {\r\n        V.scoreExtra = 0\r\n        V.scoreGame = 0\r\n        V.isCompleted = true\r\n        V.score.updateScore(V.scoreGame)\r\n        V.blocks = this.createArray2D(4, 4, null)\r\n        V.data = this.createArray2D(4, 4, 0)\r\n        this.randomBlock()\r\n        this.randomBlock()\r\n    },\r\n    randomBlock() {\r\n        let emptyLocations = this.getEmptyLocations();\r\n        if (emptyLocations.length > 0) {\r\n            let locationRandom = emptyLocations[Math.floor(Math.random() * emptyLocations.length)];\r\n            let x = locationRandom.x;\r\n            let y = locationRandom.y;\r\n            let size = 150\r\n            let numberRandom = V.numbers[Math.floor(Math.random() * V.numbers.length)];\r\n            let block = this.createdBlock(size, size, V.positions[x][y].x, V.positions[x][y].y, numberRandom)\r\n            V.blocks[x][y] = block;\r\n            V.data[x][y] = numberRandom;\r\n            block.getComponent('block').appear();\r\n            emptyLocations = this.getEmptyLocations();\r\n            if (emptyLocations.length == 0) {\r\n                if (this.checkLose()) {\r\n                    Emitter.instance.emit(\"showPopupLoseGame\", V.scoreGame);\r\n                    Emitter.instance.emit('onDisableKeyDownLoseGame');\r\n                }\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    afterMove() {\r\n        if (V.isMoved == false) {\r\n            V.isCompleted = true\r\n            return\r\n        }\r\n        let actions = [cc.callFunc(() => { this.countScore() }),\r\n        cc.callFunc(() => { this.randomBlock() }),\r\n        cc.callFunc(() => {\r\n            if (this.checkWin()) {\r\n                Emitter.instance.emit(\"showPopupWinGame\", V.scoreGame);\r\n                Emitter.instance.emit(\"onDisabledKeyDown\");\r\n            }\r\n        }),\r\n        cc.callFunc(() => { V.isCompleted = true }),\r\n        ]\r\n        this.node.runAction(cc.sequence(actions));\r\n    },\r\n    moveNode(block, position, callback) {\r\n        let actions = [cc.moveTo(0.05, position),\r\n        cc.callFunc(() => { V.isMoved = true }), \r\n        cc.callFunc(() => { callback() })]\r\n        block.runAction(cc.sequence(actions));\r\n    },\r\n    mergeNode(block, blockTarget, label, callback) {\r\n        block.destroy();\r\n        let actions = [cc.callFunc(() => { blockTarget.getComponent('block').setLabel(label)}),\r\n        cc.callFunc(() => { blockTarget.getComponent('block').merge() }),\r\n        cc.callFunc(() => { V.isMoved = true; }),\r\n        cc.callFunc(() => { callback() })]\r\n        blockTarget.runAction(cc.sequence(actions));\r\n    },\r\n    moveLeft(row, col, callback) {\r\n        if (col == 0 || V.data[row][col] == 0) {\r\n            callback();\r\n            return;\r\n        } else if (V.data[row][col - 1] == 0) {\r\n            let block = V.blocks[row][col];\r\n            let position = V.positions[row][col - 1];\r\n            V.blocks[row][col - 1] = block;\r\n            V.data[row][col - 1] = V.data[row][col];\r\n            V.data[row][col] = 0;\r\n            V.blocks[row][col] = null;\r\n            this.moveNode(block, position, () => {\r\n                V.isMoved = true\r\n                this.moveLeft(row, col - 1, callback);\r\n            });\r\n        } else if (V.data[row][col - 1] == V.data[row][col]) {\r\n            let block = V.blocks[row][col];\r\n            let position = V.positions[row][col - 1];\r\n            V.data[row][col - 1] *= 2;\r\n            V.scoreExtra += V.data[row][col - 1]\r\n            V.data[row][col] = 0;\r\n            V.blocks[row][col] = null;\r\n            \r\n            this.moveNode(block, position, () => {\r\n                \r\n                this.mergeNode(block, V.blocks[row][col - 1], V.data[row][col - 1], () => {\r\n                    V.isMoved = true\r\n                    callback();\r\n                });\r\n            });\r\n        } else {\r\n\r\n            callback();\r\n            return;\r\n        }\r\n    },\r\n    moveRight(row, col, callback) {\r\n\r\n        if (col == V.rows - 1 || V.data[row][col] == 0) {\r\n\r\n            callback();\r\n            return;\r\n        } else if (V.data[row][col + 1] == 0) {\r\n            let block = V.blocks[row][col];\r\n            let position = V.positions[row][col + 1];\r\n            V.blocks[row][col + 1] = block;\r\n            V.data[row][col + 1] = V.data[row][col];\r\n            V.data[row][col] = 0;\r\n            V.blocks[row][col] = null;\r\n            this.moveNode(block, position, () => {\r\n                V.isMoved = true\r\n                this.moveRight(row, col + 1, callback);\r\n            });\r\n        } else if (V.data[row][col + 1] == V.data[row][col]) {\r\n            let block = V.blocks[row][col];\r\n            let position = V.positions[row][col + 1];\r\n            V.data[row][col + 1] *= 2;\r\n            V.scoreExtra += V.data[row][col + 1]\r\n            V.data[row][col] = 0;\r\n            V.blocks[row][col] = null;\r\n            this.moveNode(block, position, () => {\r\n                this.mergeNode(block, V.blocks[row][col + 1], V.data[row][col + 1], () => {\r\n                    V.isMoved = true\r\n                    callback();\r\n                });\r\n            });\r\n        } else {\r\n\r\n            callback();\r\n            return;\r\n        }\r\n    },\r\n    inputRight() {\r\n        let getNodeToMove = [];\r\n        for (let row = 0; row < V.rows; row++) {\r\n            for (let col = V.rows - 1; col >= 0; col--) {\r\n                if (V.data[row][col] != 0) {\r\n                    getNodeToMove.push({ x: row, y: col });\r\n                }\r\n            }\r\n        }\r\n        let counter = 0;\r\n        for (let i = 0; i < getNodeToMove.length; ++i) {\r\n            this.moveRight(getNodeToMove[i].x, getNodeToMove[i].y, () => {\r\n                counter++;\r\n                this.checkCounter(counter, getNodeToMove)\r\n            });\r\n        }\r\n    },\r\n    inputLeft() {\r\n        let getNodeToMove = [];\r\n        for (let row = 0; row < V.rows; ++row) {\r\n            for (let col = 0; col < V.rows; ++col) {\r\n                if (V.data[row][col] != 0) {\r\n                    getNodeToMove.push({ x: row, y: col });\r\n                }\r\n            }\r\n        }\r\n\r\n        let counter = 0;\r\n        for (let i = 0; i < getNodeToMove.length; ++i) {\r\n            this.moveLeft(getNodeToMove[i].x, getNodeToMove[i].y, () => {\r\n                counter++;\r\n\r\n                this.checkCounter(counter, getNodeToMove)\r\n            });\r\n        }\r\n    },\r\n    moveUp(row, col, callback) {\r\n        if (row == 0 || V.data[row][col] == 0) {\r\n            callback();\r\n            return;\r\n        } else if (V.data[row - 1][col] == 0) {\r\n            let block = V.blocks[row][col];\r\n            let position = V.positions[row - 1][col];\r\n            V.blocks[row - 1][col] = block;\r\n            V.data[row - 1][col] = V.data[row][col];\r\n            V.data[row][col] = 0;\r\n            V.blocks[row][col] = null;\r\n            \r\n            this.moveNode(block, position, () => {\r\n                V.isMoved = true\r\n                this.moveUp(row - 1, col, callback);\r\n            });\r\n        } else if (V.data[row - 1][col] == V.data[row][col]) {\r\n            let block = V.blocks[row][col];\r\n            let position = V.positions[row - 1][col];\r\n            V.data[row - 1][col] *= 2;\r\n            V.scoreExtra += V.data[row - 1][col]\r\n            V.data[row][col] = 0;\r\n            V.blocks[row][col] = null;\r\n           \r\n            this.moveNode(block, position, () => {\r\n                this.mergeNode(block, V.blocks[row - 1][col], V.data[row - 1][col], () => {\r\n                    V.isMoved = true\r\n                    callback();\r\n                });\r\n            });\r\n        } else {\r\n            callback();\r\n            return;\r\n        }\r\n    },\r\n    inputUp() {\r\n        let getNodeToMove = [];\r\n        for (let row = 0; row < V.rows; row++) {\r\n            for (let col = 0; col < V.rows; col++) {\r\n                if (V.data[row][col] != 0) {\r\n                    getNodeToMove.push({ x: row, y: col });\r\n                }\r\n            }\r\n        }\r\n        let counter = 0;\r\n        for (let i = 0; i < getNodeToMove.length; ++i) {\r\n            this.moveUp(getNodeToMove[i].x, getNodeToMove[i].y, () => {\r\n                counter++;\r\n                this.checkCounter(counter, getNodeToMove)\r\n            });\r\n        }\r\n    },\r\n    moveDown(row, col, callback) {\r\n        if (row == V.rows - 1 || V.data[row][col] == 0) {\r\n            callback();\r\n            return;\r\n        } else\r\n            if (V.data[row + 1][col] == 0) {\r\n                let block = V.blocks[row][col];\r\n                let position = V.positions[row + 1][col];\r\n                V.blocks[row + 1][col] = block;\r\n                V.data[row + 1][col] = V.data[row][col];\r\n                V.data[row][col] = 0;\r\n                V.blocks[row][col] = null;\r\n                this.moveNode(block, position, () => {\r\n                    V.isMoved = true\r\n                    this.moveDown(row + 1, col, callback);\r\n                });\r\n            } else if (V.data[row + 1][col] == V.data[row][col]) {\r\n                let block = V.blocks[row][col];\r\n                let position = V.positions[row + 1][col];\r\n                V.data[row + 1][col] *= 2;\r\n                V.scoreExtra += V.data[row + 1][col]\r\n                V.data[row][col] = 0;\r\n                V.blocks[row][col] = null;\r\n                this.moveNode(block, position, () => {\r\n                    this.mergeNode(block, V.blocks[row + 1][col], V.data[row + 1][col], () => {\r\n                        V.isMoved = true\r\n                        callback();\r\n                    });\r\n                });\r\n            } else {\r\n                callback();\r\n                return;\r\n            }\r\n    },\r\n    inputDown() {\r\n        let getNodeToMove = [];\r\n        for (let row = V.rows - 1; row >= 0; row--) {\r\n            for (let col = 0; col < V.rows; col++) {\r\n                if (V.data[row][col] != 0) {\r\n                    getNodeToMove.push({ x: row, y: col });\r\n                }\r\n            }\r\n        }\r\n        let counter = 0;\r\n        for (let i = 0; i < getNodeToMove.length; i++) {\r\n            this.moveDown(getNodeToMove[i].x, getNodeToMove[i].y, () => {\r\n                counter++;\r\n                this.checkCounter(counter, getNodeToMove)\r\n            });\r\n        }\r\n    },\r\n    checkCounter(counter, getNodeToMove) {\r\n        if (counter == getNodeToMove.length) {\r\n            this.afterMove();\r\n        }\r\n    },\r\n    newGame() {\r\n        for (let row = 0; row < 4; row++) {\r\n            for (let col = 0; col < 4; col++) {\r\n                if (V.blocks[row][col] != null) {\r\n                    V.blocks[row][col].destroy()\r\n                }\r\n            }\r\n        }\r\n        this.gameInit();\r\n        Emitter.instance.emit('onEnableKeyDown');\r\n        V.audio1.playSoundClick();\r\n    },\r\n    checkWin() {\r\n        for (let row = 0; row < V.rows; row++) {\r\n            for (let col = 0; col < V.rows; col++) {\r\n                if (V.data[row][col] == 2048) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    checkLose() {\r\n        for (let row = 0; row < 4; row++) {\r\n            for (let col = 0; col < 4; col++) {\r\n                if (row == 3 && col < 3) {\r\n                    if (V.data[row][col] == V.data[row][col + 1]) {\r\n                        return false;\r\n                    }\r\n                } else if (col == 3) {\r\n                    if (row < 3) {\r\n                        if (V.data[row][col] == V.data[row + 1][col]) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n                else if (V.data[row][col] == V.data[row + 1][col] ||\r\n                    V.data[row][col] == V.data[row][col + 1]) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n});\r\n"]}